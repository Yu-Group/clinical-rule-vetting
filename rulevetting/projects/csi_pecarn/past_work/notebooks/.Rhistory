0.5327102803738317, 0.5046728971962616, 0.3925233644859813,
0.04672897196261682, 0.0)
allspec_tree <- c(0.014388489208633094, 0.7535971223021583, 0.8111510791366906,
0.8435251798561151, 0.8633093525179856, 0.8723021582733813,
0.8992805755395683, 0.9028776978417267, 0.987410071942446,
0.9892086330935251, 0.9892086330935251, 0.9910071942446043,
1.0, 1.0)
plot(allsens_tree, allspec_tree)
allsens_tree <- c(1.0, 0.9813084112149533, 0.9532710280373832,
0.9252336448598131, 0.9158878504672897, 0.8411214953271028,
0.8130841121495327, 0.8037383177570093, 0.5887850467289719,
0.5327102803738317, 0.5046728971962616, 0.3925233644859813,
0.04672897196261682, 0.0)
allspec_tree <- c(0.014388489208633094, 0.7535971223021583, 0.8111510791366906,
0.8435251798561151, 0.8633093525179856, 0.8723021582733813,
0.8992805755395683, 0.9028776978417267, 0.987410071942446,
0.9892086330935251, 0.9892086330935251, 0.9910071942446043,
1.0, 1.0)
plot(allsens_tree, allspec_tree, type = "b")
allsens_tree <- c(1.0, 0.9813084112149533, 0.9532710280373832,
0.9252336448598131, 0.9158878504672897, 0.8411214953271028,
0.8130841121495327, 0.8037383177570093, 0.5887850467289719,
0.5327102803738317, 0.5046728971962616, 0.3925233644859813,
0.04672897196261682, 0.0)
allspec_tree <- c(0.014388489208633094, 0.7535971223021583, 0.8111510791366906,
0.8435251798561151, 0.8633093525179856, 0.8723021582733813,
0.8992805755395683, 0.9028776978417267, 0.987410071942446,
0.9892086330935251, 0.9892086330935251, 0.9910071942446043,
1.0, 1.0)
plot(allsens_tree, allspec_tree, type = "d")
allsens_tree <- c(1.0, 0.9813084112149533, 0.9532710280373832,
0.9252336448598131, 0.9158878504672897, 0.8411214953271028,
0.8130841121495327, 0.8037383177570093, 0.5887850467289719,
0.5327102803738317, 0.5046728971962616, 0.3925233644859813,
0.04672897196261682, 0.0)
allspec_tree <- c(0.014388489208633094, 0.7535971223021583, 0.8111510791366906,
0.8435251798561151, 0.8633093525179856, 0.8723021582733813,
0.8992805755395683, 0.9028776978417267, 0.987410071942446,
0.9892086330935251, 0.9892086330935251, 0.9910071942446043,
1.0, 1.0)
plot(allsens_tree, allspec_tree, type = "o")
allsens_tree <- c(1.0, 0.9813084112149533, 0.9532710280373832,
0.9252336448598131, 0.9158878504672897, 0.8411214953271028,
0.8130841121495327, 0.8037383177570093, 0.5887850467289719,
0.5327102803738317, 0.5046728971962616, 0.3925233644859813,
0.04672897196261682, 0.0)
allspec_tree <- c(0.014388489208633094, 0.7535971223021583, 0.8111510791366906,
0.8435251798561151, 0.8633093525179856, 0.8723021582733813,
0.8992805755395683, 0.9028776978417267, 0.987410071942446,
0.9892086330935251, 0.9892086330935251, 0.9910071942446043,
1.0, 1.0)
plot(allsens_tree, allspec_tree, type = "o", las = 19)
allsens_tree <- c(1.0, 0.9813084112149533, 0.9532710280373832,
0.9252336448598131, 0.9158878504672897, 0.8411214953271028,
0.8130841121495327, 0.8037383177570093, 0.5887850467289719,
0.5327102803738317, 0.5046728971962616, 0.3925233644859813,
0.04672897196261682, 0.0)
allspec_tree <- c(0.014388489208633094, 0.7535971223021583, 0.8111510791366906,
0.8435251798561151, 0.8633093525179856, 0.8723021582733813,
0.8992805755395683, 0.9028776978417267, 0.987410071942446,
0.9892086330935251, 0.9892086330935251, 0.9910071942446043,
1.0, 1.0)
plot(allsens_tree, allspec_tree, type = "o", pch = 19)
rm(list = ls())
library(tidyverse)
library(knitr)
library(reshape2)
library(ggpubr)
knitr::opts_chunk$set(
echo = FALSE,  # don't print the code chunk
warning = FALSE,  # don't print warnings
message = FALSE,  # don't print messages
fig.width = 6,  # set default width of figures
fig.height = 4,  # set default height of figures
fig.align = "center",  # always align figure in center
fig.pos = "H",  # always plot figure at the exact location of the code chunk
cache = FALSE,
dpi = 400)
source("writeup_functions.R")
# load processed data
train <- read.csv("../../../../data/csi_pecarn/processed/train.csv")
tune <- read.csv("../../../../data/csi_pecarn/processed/train.csv")
test <- read.csv("../../../../data/csi_pecarn/processed/train.csv")
all <- rbind(train, tune, test)[, -1]
num_control <- all %>% filter(outcome == 0) %>% nrow()
num_case <- all %>% filter(outcome == 1) %>% nrow()
outcomes <- all %>% filter(outcome == 1) %>%
select(-outcome) %>% select(!contains("2"))
Yes <- sort(apply(outcomes, 2, mean), dec = TRUE)
No <- 1 - Yes
outcome_freq <- data.frame(cbind(No, Yes)) %>%
rownames_to_column("feature") %>%
mutate(diff = abs(Yes - No)) %>%
arrange(desc(diff))
controls <- all %>% filter(outcome != 1) %>%
select(-outcome) %>% select(!contains("2"))
Yes <- sort(apply(controls, 2, mean), dec = TRUE)
No <- 1 - Yes
control_freq <- data.frame(cbind(No, Yes)) %>%
rownames_to_column("feature") %>%
mutate(diff = abs(Yes - No)) %>%
arrange(desc(diff))
outcome_high <- plotRelFreq(outcome_freq)
outcome_low <- plotRelFreq(outcome_freq, high = FALSE)
ggarrange(outcome_high, outcome_low, ncol=2, nrow=1, common.legend = TRUE, legend="bottom")
controls_high <- plotRelFreq(control_freq)
controls_low <- plotRelFreq(control_freq, high = FALSE)
ggarrange(controls_high, controls_low, ncol=2, nrow=1, common.legend = TRUE, legend="bottom")
type <- c("AdaBoost", "Decision Tree", "Logistic Regression")
vars <- paste0(c(16, 6, 21), " optimal features")
sensitivity <- c(0.9813084112149533, 0.9813084112149533, 0.9813084112149533)
specificity <- c(0.7679856115107914, 0.7535971223021583, 0.7679856115107914)
names(sensitivity) <- names(specificity) <- type
df_res <- data.frame(type, sensitivity, specificity)
melted <- melt(df_res)
melted %>%
ggplot(mapping = aes(x = type, y = value, fill = variable)) +
geom_col(position = 'dodge') +
labs(x = "Method", y = "Accuracy") +
scale_fill_manual("Accuracy Metric", values = c("#2274AE", "goldenrod2")) +
theme_classic() +
geom_text(aes(label = round(value, 2)), vjust = -0.4, position = position_dodge(0.9))
allsens_tree <- c(1.0, 0.9813084112149533, 0.9532710280373832,
0.9252336448598131, 0.9158878504672897, 0.8411214953271028,
0.8130841121495327, 0.8037383177570093, 0.5887850467289719,
0.5327102803738317, 0.5046728971962616, 0.3925233644859813,
0.04672897196261682, 0.0)
allspec_tree <- c(0.014388489208633094, 0.7535971223021583, 0.8111510791366906,
0.8435251798561151, 0.8633093525179856, 0.8723021582733813,
0.8992805755395683, 0.9028776978417267, 0.987410071942446,
0.9892086330935251, 0.9892086330935251, 0.9910071942446043,
1.0, 1.0)
plotROC(allsens_tree, allspec_tree)
df <- data.frame(allsens_tree, allspec_tree, allsens_ada, allspec_ada,
allsens_log, allspec_log)
rm(list = ls())
library(tidyverse)
library(knitr)
library(reshape2)
library(ggpubr)
knitr::opts_chunk$set(
echo = FALSE,  # don't print the code chunk
warning = FALSE,  # don't print warnings
message = FALSE,  # don't print messages
fig.width = 6,  # set default width of figures
fig.height = 4,  # set default height of figures
fig.align = "center",  # always align figure in center
fig.pos = "H",  # always plot figure at the exact location of the code chunk
cache = FALSE,
dpi = 400)
source("writeup_functions.R")
# load processed data
train <- read.csv("../../../../data/csi_pecarn/processed/train.csv")
tune <- read.csv("../../../../data/csi_pecarn/processed/train.csv")
test <- read.csv("../../../../data/csi_pecarn/processed/train.csv")
all <- rbind(train, tune, test)[, -1]
num_control <- all %>% filter(outcome == 0) %>% nrow()
num_case <- all %>% filter(outcome == 1) %>% nrow()
outcomes <- all %>% filter(outcome == 1) %>%
select(-outcome) %>% select(!contains("2"))
Yes <- sort(apply(outcomes, 2, mean), dec = TRUE)
No <- 1 - Yes
outcome_freq <- data.frame(cbind(No, Yes)) %>%
rownames_to_column("feature") %>%
mutate(diff = abs(Yes - No)) %>%
arrange(desc(diff))
controls <- all %>% filter(outcome != 1) %>%
select(-outcome) %>% select(!contains("2"))
Yes <- sort(apply(controls, 2, mean), dec = TRUE)
No <- 1 - Yes
control_freq <- data.frame(cbind(No, Yes)) %>%
rownames_to_column("feature") %>%
mutate(diff = abs(Yes - No)) %>%
arrange(desc(diff))
outcome_high <- plotRelFreq(outcome_freq)
outcome_low <- plotRelFreq(outcome_freq, high = FALSE)
ggarrange(outcome_high, outcome_low, ncol=2, nrow=1, common.legend = TRUE, legend="bottom")
controls_high <- plotRelFreq(control_freq)
controls_low <- plotRelFreq(control_freq, high = FALSE)
ggarrange(controls_high, controls_low, ncol = 2, nrow = 1, common.legend = TRUE,
legend="bottom")
type <- c("AdaBoost", "Decision Tree", "Logistic Regression")
vars <- paste0(c(16, 6, 21), " optimal features")
sensitivity <- c(0.9813084112149533, 0.9813084112149533, 0.9813084112149533)
specificity <- c(0.7679856115107914, 0.7535971223021583, 0.7679856115107914)
names(sensitivity) <- names(specificity) <- type
df_res <- data.frame(type, sensitivity, specificity)
melted <- melt(df_res)
melted %>%
ggplot(mapping = aes(x = type, y = value, fill = variable)) +
geom_col(position = 'dodge') +
labs(x = "Method", y = "Accuracy") +
scale_fill_manual("Accuracy Metric", values = c("#2274AE", "goldenrod2")) +
theme_classic() +
geom_text(aes(label = round(value, 2)), vjust = -0.4, position = position_dodge(0.9))
allsens_tree <- c(1.0, 0.9813084112149533, 0.9532710280373832,
0.9252336448598131, 0.9158878504672897, 0.8411214953271028,
0.8130841121495327, 0.8037383177570093, 0.5887850467289719,
0.5327102803738317, 0.5046728971962616, 0.3925233644859813,
0.04672897196261682, 0.0)
allspec_tree <- c(0.014388489208633094, 0.7535971223021583, 0.8111510791366906,
0.8435251798561151, 0.8633093525179856, 0.8723021582733813,
0.8992805755395683, 0.9028776978417267, 0.987410071942446,
0.9892086330935251, 0.9892086330935251, 0.9910071942446043,
1.0, 1.0)
allsens_ada <- c(1.0, 0.9906542056074766, 0.9906542056074766, 0.9906542056074766,
0.9906542056074766, 0.9813084112149533, 0.9813084112149533,
0.9813084112149533, 0.9626168224299065, 0.9439252336448598,
0.9345794392523364, 0.9345794392523364, 0.9345794392523364,
0.9252336448598131, 0.9158878504672897, 0.9065420560747663,
0.9065420560747663, 0.9065420560747663, 0.9065420560747663,
0.8411214953271028, 0.8317757009345794, 0.7009345794392523,
0.6915887850467289, 0.6822429906542056, 0.6728971962616822,
0.6635514018691588, 0.6448598130841121, 0.6448598130841121,
0.616822429906542, 0.5887850467289719, 0.5607476635514018,
0.5327102803738317, 0.34579439252336447, 0.32710280373831774,
0.308411214953271, 0.2803738317757009, 0.205607476635514,
0.19626168224299065, 0.18691588785046728, 0.16822429906542055,
0.1308411214953271, 0.12149532710280374, 0.102803738317757,
0.07476635514018691, 0.028037383177570093, 0.018691588785046728,
0.009345794392523364, 0.0)
allspec_ada <- c(0.14568345323741008, 0.7068345323741008, 0.710431654676259,
0.7140287769784173, 0.7284172661870504, 0.7571942446043165,
0.7643884892086331, 0.7679856115107914, 0.7949640287769785,
0.841726618705036, 0.8579136690647482, 0.8597122302158273,
0.8615107913669064, 0.8669064748201439, 0.8741007194244604,
0.8794964028776978, 0.8848920863309353, 0.8884892086330936,
0.8902877697841727, 0.89568345323741, 0.8974820143884892,
0.9730215827338129, 0.9730215827338129, 0.9766187050359713,
0.9766187050359713, 0.9766187050359713, 0.9784172661870504,
0.9802158273381295, 0.9820143884892086, 0.9820143884892086,
0.9892086330935251, 0.9910071942446043, 0.9964028776978417,
0.9964028776978417, 0.9964028776978417, 0.9982014388489209,
0.9982014388489209, 0.9982014388489209, 0.9982014388489209,
1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)
allsens_log <- c(1.0, 0.9906542056074766, 0.9906542056074766, 0.9906542056074766,
0.9906542056074766, 0.9813084112149533, 0.9813084112149533,
0.9813084112149533, 0.9626168224299065, 0.9532710280373832,
0.9532710280373832, 0.9345794392523364, 0.9345794392523364,
0.9252336448598131, 0.9158878504672897, 0.9065420560747663,
0.9065420560747663, 0.9065420560747663, 0.9065420560747663,
0.8411214953271028, 0.8317757009345794, 0.822429906542056,
0.6915887850467289, 0.6822429906542056, 0.6728971962616822,
0.6728971962616822, 0.6635514018691588, 0.6448598130841121,
0.616822429906542, 0.5887850467289719, 0.5607476635514018,
0.5420560747663551, 0.5233644859813084, 0.4953271028037383,
0.308411214953271, 0.29906542056074764, 0.2897196261682243,
0.21495327102803738, 0.18691588785046728, 0.17757009345794392,
0.1588785046728972, 0.1308411214953271, 0.09345794392523364,
0.07476635514018691, 0.06542056074766354, 0.056074766355140186,
0.009345794392523364, 0.0)
allspec_log <- c(0.14568345323741008, 0.7068345323741008, 0.710431654676259,
0.7140287769784173, 0.7284172661870504, 0.7571942446043165,
0.7643884892086331, 0.7679856115107914, 0.7949640287769785,
0.8111510791366906, 0.8129496402877698, 0.8597122302158273,
0.8615107913669064, 0.8669064748201439, 0.8723021582733813,
0.8794964028776978, 0.8812949640287769, 0.8866906474820144,
0.8902877697841727, 0.89568345323741, 0.8974820143884892,
0.8974820143884892, 0.9730215827338129, 0.9730215827338129,
0.9766187050359713, 0.9784172661870504, 0.9784172661870504,
0.9802158273381295, 0.9820143884892086, 0.9820143884892086,
0.9892086330935251, 0.9892086330935251, 0.9892086330935251,
0.9910071942446043, 0.9964028776978417, 0.9964028776978417,
0.9964028776978417, 0.9964028776978417, 0.9982014388489209,
0.9982014388489209, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)
roc_tree <- plotROC(allsens_tree, allspec_tree)
roc_ada <- plotROC(allsens_ada, allspec_ada, model = "AdaBoost")
roc_log <- plotROC(allsens_log, allspec_log, model = "Logistic Regression")
ggarrange(roc_ada, roc_tree, roc_log, ncol = 2, nrow = 2)
df <- data.frame(allsens_tree, allspec_tree, allsens_ada, allspec_ada,
allsens_log, allspec_log)
df_tree <- data.frame(Sensitivity = allsens_tree, Specificity = allspec_tree)
df_ada <- data.frame(Sensitivity = allsens_ada, Specificity = allspec_ada)
df_log <- data.frame(Sensitivity = allsens_log, Specificity = allspec_log)
df_tree %>% ggplot(mapping = aes(Sensitivity, Sensitivity)) +
geom_point(size = 1, color = col) +
geom_path(color = col) +
labs(x = "Sensitivity", y = "Specificity", title = model) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
df_tree <- data.frame(Sensitivity = allsens_tree, Specificity = allspec_tree)
df_ada <- data.frame(Sensitivity = allsens_ada, Specificity = allspec_ada)
df_log <- data.frame(Sensitivity = allsens_log, Specificity = allspec_log)
df_tree %>% ggplot(mapping = aes(Sensitivity, Sensitivity)) +
geom_point(size = 1, color = col) +
geom_path(color = col) +
labs(x = "Sensitivity", y = "Specificity") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
df_tree <- data.frame(Sensitivity = allsens_tree, Specificity = allspec_tree)
df_ada <- data.frame(Sensitivity = allsens_ada, Specificity = allspec_ada)
df_log <- data.frame(Sensitivity = allsens_log, Specificity = allspec_log)
df_tree %>% ggplot(mapping = aes(Sensitivity, Sensitivity)) +
geom_point(size = 1, color = col) +
geom_path() +
labs(x = "Sensitivity", y = "Specificity") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
df_tree
df_tree <- data.frame(Sensitivity = allsens_tree, Specificity = allspec_tree,
type = "Decision Tree")
df_ada <- data.frame(Sensitivity = allsens_ada, Specificity = allspec_ada,
type = "AdaBoost")
df_log <- data.frame(Sensitivity = allsens_log, Specificity = allspec_log,
type = "Logistic Regression")
df_tree %>% ggplot(mapping = aes(Sensitivity, Sensitivity)) +
geom_point(size = 1, color = col) +
geom_path() +
labs(x = "Sensitivity", y = "Specificity") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
df_tree <- data.frame(Sensitivity = allsens_tree, Specificity = allspec_tree,
type = "Decision Tree")
df_ada <- data.frame(Sensitivity = allsens_ada, Specificity = allspec_ada,
type = "AdaBoost")
df_log <- data.frame(Sensitivity = allsens_log, Specificity = allspec_log,
type = "Logistic Regression")
df <- rbind(df_tree, df_ada, df_log)
df %>% ggplot(mapping = aes(Sensitivity, Sensitivity)) +
geom_point(size = 1, color = col) +
geom_path() +
labs(x = "Sensitivity", y = "Specificity") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
df %>% ggplot(mapping = aes(Sensitivity, Sensitivity))
df_tree <- data.frame(Sensitivity = allsens_tree, Specificity = allspec_tree,
type = "Decision Tree")
df_ada <- data.frame(Sensitivity = allsens_ada, Specificity = allspec_ada,
type = "AdaBoost")
df_log <- data.frame(Sensitivity = allsens_log, Specificity = allspec_log,
type = "Logistic Regression")
df <- rbind(df_tree, df_ada, df_log)
df %>% ggplot(mapping = aes(Sensitivity, Sensitivity)) +
geom_point(size = 1, color = "red") +
geom_path() +
labs(x = "Sensitivity", y = "Specificity") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
df_tree <- data.frame(Sensitivity = allsens_tree, Specificity = allspec_tree,
type = "Decision Tree")
df_ada <- data.frame(Sensitivity = allsens_ada, Specificity = allspec_ada,
type = "AdaBoost")
df_log <- data.frame(Sensitivity = allsens_log, Specificity = allspec_log,
type = "Logistic Regression")
df <- rbind(df_tree, df_ada, df_log)
df %>% ggplot(mapping = aes(Sensitivity, Sensitivity)) +
geom_point(size = 1, color = "red") +
geom_path() +
labs(x = "Sensitivity", y = "Specificity") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5)) + facet_wrap(~type)
df_log
df_tree <- data.frame(Sensitivity = allsens_tree, Specificity = allspec_tree,
type = "Decision Tree")
df_ada <- data.frame(Sensitivity = allsens_ada, Specificity = allspec_ada,
type = "AdaBoost")
df_log <- data.frame(Sensitivity = allsens_log, Specificity = allspec_log,
type = "Logistic Regression")
df <- rbind(df_tree, df_ada, df_log)
df %>% ggplot(mapping = aes(Sensitivity, Sensitivity)) +
geom_point(size = 1) +
geom_path() +
labs(x = "Sensitivity", y = "Specificity") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5)) + facet_wrap(~type)
df_tree <- data.frame(Sensitivity = allsens_tree, Specificity = allspec_tree,
type = "Decision Tree")
df_ada <- data.frame(Sensitivity = allsens_ada, Specificity = allspec_ada,
type = "AdaBoost")
df_log <- data.frame(Sensitivity = allsens_log, Specificity = allspec_log,
type = "Logistic Regression")
df <- rbind(df_tree, df_ada, df_log)
df_tree %>% ggplot(mapping = aes(Sensitivity, Sensitivity)) +
geom_point(size = 1) +
geom_path() +
labs(x = "Sensitivity", y = "Specificity") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5)) + facet_wrap(~type)
df_tree
df_tree %>% ggplot(mapping = aes(Sensitivity, Sensitivity)) +
geom_point(size = 1)
df_tree
df_tree <- data.frame(Sensitivity = allsens_tree, Specificity = allspec_tree,
type = "Decision Tree")
df_ada <- data.frame(Sensitivity = allsens_ada, Specificity = allspec_ada,
type = "AdaBoost")
df_log <- data.frame(Sensitivity = allsens_log, Specificity = allspec_log,
type = "Logistic Regression")
df <- rbind(df_tree, df_ada, df_log)
df_tree %>% ggplot(mapping = aes(Sensitivity, Sensitivity)) +
geom_point(size = 1) +
geom_path() +
labs(x = "Sensitivity", y = "Specificity") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5)) + facet_wrap(~type)
df_tree %>% ggplot(mapping = aes(Sensitivity, Sensitivity)) +
geom_point(size = 1) +
geom_path()
df_tree
roc_tree <- plotROC(allsens_tree, allspec_tree)
roc_ada <- plotROC(allsens_ada, allspec_ada, model = "AdaBoost")
roc_log <- plotROC(allsens_log, allspec_log, model = "Logistic Regression")
ggarrange(roc_ada, roc_tree, roc_log, ncol = 2, nrow = 2)
df_tree
df_tree <- data.frame(Sensitivity = allsens_tree, Specificity = allspec_tree,
type = "Decision Tree")
df_ada <- data.frame(Sensitivity = allsens_ada, Specificity = allspec_ada,
type = "AdaBoost")
df_log <- data.frame(Sensitivity = allsens_log, Specificity = allspec_log,
type = "Logistic Regression")
df <- rbind(df_tree, df_ada, df_log)
df_tree %>% ggplot(mapping = aes(Sensitivity, Specificity)) +
geom_point(size = 1) +
geom_path() +
labs(x = "Sensitivity", y = "Specificity") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5)) + facet_wrap(~type)
df_tree <- data.frame(Sensitivity = allsens_tree, Specificity = allspec_tree,
type = "Decision Tree")
df_ada <- data.frame(Sensitivity = allsens_ada, Specificity = allspec_ada,
type = "AdaBoost")
df_log <- data.frame(Sensitivity = allsens_log, Specificity = allspec_log,
type = "Logistic Regression")
df <- rbind(df_tree, df_ada, df_log)
df_tree %>% ggplot(mapping = aes(Sensitivity, Specificity)) +
geom_point(size = 1, color = "firebrick2") +
geom_path(color = "firebrick2") +
labs(x = "Sensitivity", y = "Specificity") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5)) + facet_wrap(~type)
df_tree <- data.frame(Sensitivity = allsens_tree, Specificity = allspec_tree,
type = "Decision Tree")
df_ada <- data.frame(Sensitivity = allsens_ada, Specificity = allspec_ada,
type = "AdaBoost")
df_log <- data.frame(Sensitivity = allsens_log, Specificity = allspec_log,
type = "Logistic Regression")
df <- rbind(df_tree, df_ada, df_log)
df %>% ggplot(mapping = aes(Sensitivity, Specificity)) +
geom_point(size = 1, color = "firebrick2") +
geom_path(color = "firebrick2") +
labs(x = "Sensitivity", y = "Specificity") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5)) + facet_wrap(~type)
df_tree <- data.frame(Sensitivity = allsens_tree, Specificity = allspec_tree,
type = "Decision Tree")
df_ada <- data.frame(Sensitivity = allsens_ada, Specificity = allspec_ada,
type = "AdaBoost")
df_log <- data.frame(Sensitivity = allsens_log, Specificity = allspec_log,
type = "Logistic Regression")
df <- rbind(df_tree, df_ada, df_log)
df %>% ggplot(mapping = aes(Sensitivity, Specificity)) +
geom_point(size = 1, color = "firebrick2") +
geom_path(color = "firebrick2") +
labs(x = "Sensitivity", y = "Specificity") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5)) + facet_grid(~type)
df_tree <- data.frame(Sensitivity = allsens_tree, Specificity = allspec_tree,
type = "Decision Tree")
df_ada <- data.frame(Sensitivity = allsens_ada, Specificity = allspec_ada,
type = "AdaBoost")
df_log <- data.frame(Sensitivity = allsens_log, Specificity = allspec_log,
type = "Logistic Regression")
df <- rbind(df_tree, df_ada, df_log)
df_tree %>% ggplot(mapping = aes(Sensitivity, Specificity)) +
geom_point(size = 1, color = "firebrick2") +
geom_path(color = "firebrick2") +
labs(x = "Sensitivity", y = "Specificity") +
geom_point(data = df_ada, x = Sensitivity, y = Specificity, size = 1, color = "purple") +
geom_path(color = "purple")
df_tree <- data.frame(Sensitivity = allsens_tree, Specificity = allspec_tree,
type = "Decision Tree")
df_ada <- data.frame(Sensitivity = allsens_ada, Specificity = allspec_ada,
type = "AdaBoost")
df_log <- data.frame(Sensitivity = allsens_log, Specificity = allspec_log,
type = "Logistic Regression")
df <- rbind(df_tree, df_ada, df_log)
df_tree %>% ggplot(mapping = aes(Sensitivity, Specificity)) +
geom_point(size = 1, color = "firebrick2") +
geom_path(color = "firebrick2") +
labs(x = "Sensitivity", y = "Specificity") +
geom_point(data = df_ada, x = Sensitivity, y = Specificity, size = 1, color = "purple") +
geom_path(color = "purple")
df_tree <- data.frame(Sensitivity = allsens_tree, Specificity = allspec_tree,
type = "Decision Tree")
df_ada <- data.frame(Sensitivity = allsens_ada, Specificity = allspec_ada,
type = "AdaBoost")
df_log <- data.frame(Sensitivity = allsens_log, Specificity = allspec_log,
type = "Logistic Regression")
df <- rbind(df_tree, df_ada, df_log)
df_tree %>% ggplot(mapping = aes(Sensitivity, Specificity)) +
geom_point(size = 1, color = "firebrick2") +
geom_path(color = "firebrick2") +
labs(x = "Sensitivity", y = "Specificity") +
geom_point(data = df_ada, mapping = aes(x = Sensitivity, y = Specificity), size = 1, color = "purple") +
geom_path(color = "purple")
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
df_tree <- data.frame(Sensitivity = allsens_tree, Specificity = allspec_tree,
type = "Decision Tree")
df_ada <- data.frame(Sensitivity = allsens_ada, Specificity = allspec_ada,
type = "AdaBoost")
df_log <- data.frame(Sensitivity = allsens_log, Specificity = allspec_log,
type = "Logistic Regression")
df <- rbind(df_tree, df_ada, df_log)
df_tree %>% ggplot(mapping = aes(Sensitivity, Specificity)) +
geom_point(size = 1, color = "firebrick2") +
geom_path(color = "firebrick2") +
labs(x = "Sensitivity", y = "Specificity") +
geom_point(data = df_ada, mapping = aes(x = Sensitivity, y = Specificity), size = 1, color = "purple") +
geom_path(color = "purple") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
